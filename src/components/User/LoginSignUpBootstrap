.main-signup .nav.nav-pills {
    width: 50%;
    margin: 0 auto;
    border-radius: 50px;
    background-color: rgb(255 255 255 / 10%);
    overflow: hidden;
  }
  .main-signup .nav.nav-pills .nav-item {
    width: 50%;
  }
  .main-signup .nav.nav-pills .nav-link {
    background-color: transparent;
    border-radius: 0;
    padding: 17px 0;
    color: #fff;
    width: 100%;
    font-size: 17px;
    letter-spacing: 0.8px;
    font-weight: 500;
    position: relative;
    transition: 0.3s ease-in-out;
    text-align: center;
    z-index: 0;
  }
  .main-signup .nav.nav-pills .nav-link::before {
      content: "";
      position: absolute;
      width: 0;
      height: 100%;
      background: linear-gradient(90.21deg, #608c8c -5.91%, #0f544a 111.58%);
      top: 0;
      left: 0;
      z-index: -1;
      transition: 0.3s ease-in-out;
  }
  .main-signup .nav.nav-pills .nav-link.active::before {
      width: 100% !important;
  }
  .main-signup .nav.nav-pills .nav-link.active {
      border: 1px solid rgba(255, 255, 255, 1);
  }
  .nav-link#main-signup-tabs-tab-first {
    border: 1px solid rgba(255, 255, 255, 0.5);
    border-radius: 20px 0px 0px 20px;
  }
  .nav-link#main-signup-tabs-tab-second {
    border-top: 1px solid rgba(255, 255, 255, 0.5);
    border-bottom: 1px solid rgba(255, 255, 255, 0.5);
  }
  
.main-signup {
    
    text-align: center;
    align-items: center;
    justify-content: center;
    color: white;
    padding-top: 150px;
    padding-left: 500px;
    padding-right: 500px;
}
.signup-tabs {
    text-align: center;
    align-items: center;
    justify-content: center;
    display: flex; 
    color: white;
    margin-bottom: 50px;
}

.signup {
    align-items: center;
    justify-content: center;
    display: flex;
}

.signup-form {
    background-color: #073d3e; 
    border: 2px solid #f1f1f1;
    padding: 4rem;
    color: white;
    border-radius: var(--bs-border-radius);
}

.login {
    /* padding-left: 15px;
    padding-right: 15px; */
    font-weight: 700;
    color: #fff;
    border: 1px solid #fff;
    padding: 18px 34px;
    font-size: 18px;
	position: relative;
	background-color: transparent;
	transition: 0.3s ease-in-out;
}

.login::before {
    content: "";
    width: 0%;
    height: 100%;
    position: absolute;
    background-color: #fff;
    left: 0;
    top: 0;
    z-index: -1;
    transition: 0.3s ease-in-out;
  }

.login:hover {
    background-color: #fff;
    color: #073d3e;
}

.nav-link {
    color: white;
}
.nav-link:hover {
    color: white;
}

import React, { Fragment, useRef, useState } from "react";
import "./LoginSignUp.css";
import {Link} from "react-router-dom";
import {Nav, Row, Tab, Button, Form, Image} from 'react-bootstrap';

import { MainNavBar } from "../layout/MainNavBar";
// import GrowPlants from "../growPlants/GrowPlants";

const LoginSignUp = () => {
   
    const loginTab = useRef(null);
    const registerTab = useRef(null);
    const switcherTabs = useRef(null);

    const [loginEmail, setLoginEmail] = useState("");
    const [loginPassword, setLoginPassword] = useState("");
    const [fileName, setFileName] = useState("Upload Boundary File");
    const [avatarPreview, setAvatarPreview] = useState("../assets/img/Profile.png");
    const [loginForm, setLoginForm] = useState({});
    const [loginErrors, setLoginErrors] = useState({});

    const setLoginField = (field, value) => {
        setLoginForm({
            ...loginForm,
            [field]: value
        });
        if(!!loginErrors[field]) {
            setLoginErrors({
                ...loginErrors,
                [field]: null
            })
        }
    }
    const loginSubmit = () => {
        console.log("Form submitted");
    }

    const registerSubmit = (e) => {
        e.preventDefault();
        console.log("Form register");
        // const myForm = new FormData();
    
        // myForm.set("name", name);
        // myForm.set("email", email);
        // myForm.set("password", password);
        // myForm.set("avatar", avatar);
        // dispatch(register(myForm));
    };
    // return <div>hello</div>

    return (
        <Fragment>
            
            <MainNavBar />
            <section className="main-signup">
                <Tab.Container defaultActiveKey="sign-up-side">
                    <Nav variant="pills" className="nav-pills mb-5 justify-content-center align-items-center" id="pills-tab">
                        <Nav.Item>
                        <Nav.Link eventKey="sign-up-side">Sign Up</Nav.Link>
                        </Nav.Item>
                        <Nav.Item>
                        <Nav.Link eventKey="register-side">Register</Nav.Link>
                        </Nav.Item>
                    </Nav>
                    <Tab.Content id="slideInUp">
                        <Tab.Pane eventKey="sign-up-side">
                            <Form className="signup-form" onSubmit={loginSubmit}> 
                                <Form.Group className="mb-4" controlId="formBasicEmailLogin">
                                    <Form.Label>Email address</Form.Label>
                                    <Form.Control 
                                        type="email" 
                                        placeholder="Enter email" 
                                        value={loginForm.name}
                                        onChange={(e) => setLoginField("name", e.target.value)}
                                        isInvalid={!!loginErrors.name}
                                    />
                                    <Form.Control.Feedback type="invalid">
                                        {loginErrors.name}
                                    </Form.Control.Feedback>
                                </Form.Group>
                            
                                <Form.Group className="mb-5" controlId="formBasicPasswordLogin">
                                    <Form.Label>Password</Form.Label>
                                    <Form.Control type="password" placeholder="Password" />
                                </Form.Group>
                                <Form.Group className="mb-5">
                                    <Link to="/password/forgot">Forgot Password</Link>
                                </Form.Group>
                                <div className="social-icon">
                                <Button className="login" variant="primary" type="submit">
                                    Login
                                </Button>
                                </div>
                                
                            </Form>
                        </Tab.Pane>
                        <Tab.Pane eventKey="register-side">
                            <Form className="signup-form" onSubmit={registerSubmit}> 
                                <Form.Group className="mb-4" controlId="formBasicEmail">
                                    <Form.Label>Email address</Form.Label>
                                    <Form.Control type="email" placeholder="Enter email" onChange={e => console.log(e.target.value)}/>
                                </Form.Group>
                            
                                <Form.Group className="mb-4" controlId="formBasicPassword">
                                    <Form.Label>Enter Password</Form.Label>
                                    <Form.Control type="password" placeholder="Password" />
                                </Form.Group>

                                <Form.Group className="mb-5" controlId="formBasicConfirmPassword">
                                    <Form.Label>Confirm Password</Form.Label>
                                    <Form.Control type="confirm-password" placeholder="Confirm Password" />
                                </Form.Group>
                                {/* <Form.Group className="mb-5" controlId="formBasicAvatar">
                                    <Image src={avatarPreview} alt="Avatar Preview"></Image>
                                    <Form.File
                                        type="file"
                                        className="avatar"
                                        id="avatar"
                                        label={fileName}
                                        onChange={(e) => setFileName("e.target.files[0].name")}
                                        custom
                                    /> */}
                                    {/* <Form.Label>Confirm Password</Form.Label>
                                    <Form.Control type="confirm-password" placeholder="Confirm Password" /> */}
                                {/* </Form.Group> */}
                                <Button className="login" variant="primary" type="submit">
                                    Register
                                </Button>
                            </Form>
                        </Tab.Pane>
                  </Tab.Content>
                </Tab.Container>
                
            </section>
            
        </Fragment>
    )
}

export default LoginSignUp;